---
title: "Environments"
format: html
editor: visual
---

### Environment Basics

Like a list, but with some important exceptions

- every name must be unique
- unordered
- an environment has a parent
- environments are not copied when modified

```{r}
e1 <- rlang::env(
  a = FALSE,
  b = "a",
  c = 2.3,
  d = 1:3,
)
```

The current environment, or `current_env()` is the environment in which code is currently executing. When you’re experimenting interactively, that’s usually the global environment, or `global_env()`.

Parent environments are what are used to implement lexical scoping, R looks into the parent environment if it does not find a variable in the current one. This goes up until we reach the global environment at which point we stop.

Super assignment `<<-` modifies an existing variable found in a parent environment (this feels like pointers in C).

`rlang::env_*` contains a whole multitude of functions that can be used to modify or affect an environment
